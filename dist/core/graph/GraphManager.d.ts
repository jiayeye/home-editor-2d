import { GraphManagerInterface, RegionDeleteCallBack, setGraphCallback } from "./GraphInterface";
import { Graph, ShapeContent, GraphCache, SelectEnum } from "../common/Graph";
import AppInterface from "../app/AppInterface";
import GraphDrawing from './GraphDrawing';
export default class GraphManager extends GraphDrawing implements GraphManagerInterface {
    private _extraLayer;
    private _backgroundLayer;
    private _eraser;
    private _editTool;
    private _regionDelete;
    constructor(app: AppInterface);
    private _buildBackground;
    private _focus;
    private _blur;
    private _changeAllShapesColor;
    private _changeShapeColor;
    setGraph(graph: Graph, cache: GraphCache, callBack?: setGraphCallback): void;
    setShapeContent(index: number, content?: ShapeContent): void;
    private _loaderBgImg;
    private _addLayer;
    private _addHandler;
    addDisplayLayer(isNeedInit: boolean, index: Array<number>): void;
    addEditLayer(isNeedInit: boolean, index: Array<number>, select: SelectEnum): void;
    removeLayer(): void;
    setEraserSize(size: number): void;
    setShadowShape(width: number, height: number, content?: ShapeContent): void;
    deleteShadowShape(): void;
    addPoint(lineIndex: number): void;
    enableEraser(isEnabled: boolean): void;
    enableRegionDelete(isEnabled: boolean, callBack?: RegionDeleteCallBack): void;
}
